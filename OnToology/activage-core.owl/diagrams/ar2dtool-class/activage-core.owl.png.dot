digraph ar2dtool_diagram { 
rankdir=LR;
size="1501"
node [shape = rectangle, color="orange"]; "iiot:DataFormat" "sweet_units:Unit" "iiotex:AuthenticationData" "sweet_units:BaseUnit" "sweet_repr:LogarithmicScale" "iiot:MeasurementKind" "iiot:User" "sweet_units:ComplexUnit" "iiot:Service" "iiot:ServiceInterface" "ssn:Property" "iiot:PlatformComponent" "iiot:ServiceInput" "iiot:Semantics" "geosparql:Geometry" "iiot:Location" "iiot:ServiceOutput" "iiot:DomainOfInterest" "ssn:Deployment" "ssn:Input" "sosa:Actuation" "ssn:Output" "sosa:Observation" "ssn:System" "sosa:Sampling" "ssn:Stimulus" "sosa:ObservableProperty" "sosa:FeatureOfInterest" "sosa:Platform" "sosa:ActuatableProperty" "sosa:Actuator" "sosa:Sample" "time:TemporalEntity" "sosa:Sensor" "sosa:Procedure" "sosa:Result" "sosa:Sampler" ; /*classes style*/
	"sweet_units:henry" -> "sweet_units:perSecondSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:henry" -> "sweet_units:perAmpereSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:henry" -> "sweet_units:meterSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:henry" -> "sweet_units:kilogram" [ label = "relaMath:hasOperand" ];
	"sosa:usedProcedure" -> "-17219c6f:165248cbd33:-7fd0" [ label = "owl:propertyChainAxiom" ];
	"sosa:usedProcedure" -> "-17219c6f:165248cbd33:-7fd2" [ label = "owl:propertyChainAxiom" ];
	"sosa:usedProcedure" -> "-17219c6f:165248cbd33:-7fd4" [ label = "owl:propertyChainAxiom" ];
	"sosa:usedProcedure" -> "sosa:Procedure" [ label = "schema:rangeIncludes" ];
	"sosa:usedProcedure" -> "sosa:Sampling" [ label = "schema:domainIncludes" ];
	"sosa:usedProcedure" -> "sosa:Observation" [ label = "schema:domainIncludes" ];
	"sosa:usedProcedure" -> "sosa:Actuation" [ label = "schema:domainIncludes" ];
	"sweet_units:joulePerKilogramPerKelvin" -> "sweet_units:perKilogram" [ label = "relaMath:hasOperand" ];
	"sweet_units:joulePerKilogramPerKelvin" -> "sweet_units:perKelvin" [ label = "relaMath:hasOperand" ];
	"sweet_units:joulePerKilogramPerKelvin" -> "sweet_units:joule" [ label = "relaMath:hasOperand" ];
	"sweet_units:joulePerKilogram" -> "sweet_units:perKilogram" [ label = "relaMath:hasOperand" ];
	"sweet_units:joulePerKilogram" -> "sweet_units:joule" [ label = "relaMath:hasOperand" ];
	"sweet_units:millimeter" -> "sweet_units:milli" [ label = "relaSci:hasPrefix" ];
	"sweet_units:millimeter" -> "sweet_units:meter" [ label = "relaSci:hasBaseUnit" ];
	"iiot:isOwnerOf" -> "owl:topObjectProperty" [ label = "rdfs:subPropertyOf" ];
	"sweet_units:meterSquaredPerSecondSquared" -> "sweet_units:perSecondSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:meterSquaredPerSecondSquared" -> "sweet_units:meterSquared" [ label = "relaMath:hasOperand" ];
	"iiot:isUserOf" -> "owl:topObjectProperty" [ label = "rdfs:subPropertyOf" ];
	"sweet_units:ohm" -> "sweet_units:perSecondCubed" [ label = "relaMath:hasOperand" ];
	"sweet_units:ohm" -> "sweet_units:perAmpereSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:ohm" -> "sweet_units:meterSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:ohm" -> "sweet_units:kilogram" [ label = "relaMath:hasOperand" ];
	"sweet_units:pptv" -> "sweet_units:volumeRatio" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:FNU" -> "sweet_units:FTU" [ label = "owl:sameAs" ];
	"iiot:" -> "ssn:" [ label = "owl:imports" ];
	"iiot:" -> "-17219c6f:165248cbd33:-7ff5" [ label = "dc:creator" ];
	"sweet_units:perSecondCubed" -> "sweet_units:second" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:joulePerMeterCubedPerKelvin" -> "sweet_units:perMeterCubed" [ label = "relaMath:hasOperand" ];
	"sweet_units:joulePerMeterCubedPerKelvin" -> "sweet_units:perKelvin" [ label = "relaMath:hasOperand" ];
	"sweet_units:joulePerMeterCubedPerKelvin" -> "sweet_units:joule" [ label = "relaMath:hasOperand" ];
	"sweet_units:perSecondSquared" -> "sweet_units:second" [ label = "relaSci:hasBaseUnit" ];
	"iiotex:" -> "-17219c6f:165248cbd33:-7ffc" [ label = "dc:creator" ];
	"ssn:" -> "773d7723dd1305fe7f6ae1efacd468e6" [ label = "dcterms:creator" ];
	"ssn:" -> "http://www.w3.org/Consortium/Legal/2015/copyright-software-and-document" [ label = "dcterms:license" ];
	"ssn:" -> "sosa:" [ label = "owl:imports" ];
	"ssn:" -> "https://www.w3.org/2015/spatial/wiki/Semantic_Sensor_Network_Ontology" [ label = "rdfs:seeAlso" ];
	"ssn:" -> "http://www.opengeospatial.org/ogc/Software" [ label = "dcterms:license" ];
	"sweet_units:wattPerMeterSquaredPerSteradianPerWavelength" -> "sweet_units:wattPerMeterSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:wattPerMeterSquaredPerSteradianPerWavelength" -> "sweet_units:perSteradian" [ label = "relaMath:hasOperand" ];
	"sweet_units:wattPerMeterSquaredPerSteradianPerWavelength" -> "sweet_units:perMeter" [ label = "relaMath:hasOperand" ];
	"sweet_units:henryPerMeter" -> "sweet_units:perMeter" [ label = "relaMath:hasOperand" ];
	"sweet_units:henryPerMeter" -> "sweet_units:henry" [ label = "relaMath:hasOperand" ];
	"sosa:isSampleOf" -> "sosa:FeatureOfInterest" [ label = "schema:rangeIncludes" ];
	"sosa:isSampleOf" -> "sosa:Sample" [ label = "schema:domainIncludes" ];
	"sweet_units:meterPerKelvin" -> "sweet_units:perKelvin" [ label = "relaMath:hasOperand" ];
	"sweet_units:meterPerKelvin" -> "sweet_units:meter" [ label = "relaMath:hasOperand" ];
	"sweet_units:hour" -> "sweet_units:second" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:coulombPerMeterCubed" -> "sweet_units:perMeterCubed" [ label = "relaMath:hasOperand" ];
	"sweet_units:coulombPerMeterCubed" -> "sweet_units:coulomb" [ label = "relaMath:hasOperand" ];
	"sweet_units:perMil" -> "sweet_units:ratio" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:radianPerSecondSquared" -> "sweet_units:radian" [ label = "relaMath:hasOperand" ];
	"sweet_units:radianPerSecondSquared" -> "sweet_units:perSecondSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:hertz" -> "sweet_units:perSecond" [ label = "owl:sameAs" ];
	"sweet_units:candelaPerMeterSquared" -> "sweet_units:perMeterSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:candelaPerMeterSquared" -> "sweet_units:candela" [ label = "relaMath:hasOperand" ];
	"sosa:hasSample" -> "sosa:Sample" [ label = "schema:rangeIncludes" ];
	"sosa:hasSample" -> "sosa:FeatureOfInterest" [ label = "schema:domainIncludes" ];
	"sweet_units:meterSquared" -> "sweet_units:meter" [ label = "relaSci:hasBaseUnit" ];
	"sosa:resultTime" -> "sosa:Sampling" [ label = "schema:domainIncludes" ];
	"sosa:resultTime" -> "sosa:Observation" [ label = "schema:domainIncludes" ];
	"sosa:resultTime" -> "sosa:Actuation" [ label = "schema:domainIncludes" ];
	"sweet_units:BaseUnit" -> "sweet_units:ComplexUnit" [ label = "owl:disjointWith" ];
	"sweet_units:meterCubedPerSecond" -> "sweet_units:perSecond" [ label = "relaMath:hasOperand" ];
	"sweet_units:meterCubedPerSecond" -> "sweet_units:meterCubed" [ label = "relaMath:hasOperand" ];
	"sweet_units:perKelvin" -> "sweet_units:kelvin" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:coulombPerMeterSquared" -> "sweet_units:perMeterSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:coulombPerMeterSquared" -> "sweet_units:coulomb" [ label = "relaMath:hasOperand" ];
	"sweet_units:kelvinPerMeter" -> "sweet_units:perMeter" [ label = "relaMath:hasOperand" ];
	"sweet_units:kelvinPerMeter" -> "sweet_units:kelvin" [ label = "relaMath:hasOperand" ];
	"sweet_units:perSteradian" -> "sweet_units:steradian" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:perAmpereSquared" -> "sweet_units:ampere" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:ppt" -> "sweet_units:ratio" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:perMeter" -> "sweet_units:meter" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:meterCubed" -> "sweet_units:meter" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:meterCubedPerKilogram" -> "sweet_units:perKilogram" [ label = "relaMath:hasOperand" ];
	"sweet_units:meterCubedPerKilogram" -> "sweet_units:meterCubed" [ label = "relaMath:hasOperand" ];
	"sosa:madeObservation" -> "sosa:Observation" [ label = "schema:rangeIncludes" ];
	"sosa:madeObservation" -> "sosa:Sensor" [ label = "schema:domainIncludes" ];
	"sweet_units:million_km3" -> "sweet_units:meterCubed" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:arcminute" -> "sweet_units:radian" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:kilometerPerHour" -> "sweet_units:meterPerSecond" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:perVolt" -> "sweet_units:volt" [ label = "relaSci:hasBaseUnit" ];
	"sosa:actsOnProperty" -> "sosa:ActuatableProperty" [ label = "schema:rangeIncludes" ];
	"sosa:actsOnProperty" -> "sosa:Actuation" [ label = "schema:domainIncludes" ];
	"sosa:hasSimpleResult" -> "sosa:Sampling" [ label = "schema:domainIncludes" ];
	"sosa:hasSimpleResult" -> "sosa:Observation" [ label = "schema:domainIncludes" ];
	"sosa:hasSimpleResult" -> "sosa:Actuation" [ label = "schema:domainIncludes" ];
	"sweet_units:wattPerMeterSquared" -> "sweet_units:watt" [ label = "relaMath:hasOperand" ];
	"sweet_units:wattPerMeterSquared" -> "sweet_units:perMeterSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:terahertz" -> "sweet_units:tera" [ label = "relaSci:hasPrefix" ];
	"sweet_units:terahertz" -> "sweet_units:hertz" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:meter" -> "sweet_units:metre" [ label = "owl:sameAs" ];
	"sweet_units:newton" -> "sweet_units:perSecondSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:newton" -> "sweet_units:meter" [ label = "relaMath:hasOperand" ];
	"sweet_units:newton" -> "sweet_units:kilogram" [ label = "relaMath:hasOperand" ];
	"sweet_units:kilometer" -> "sweet_units:kilo" [ label = "relaSci:hasPrefix" ];
	"sweet_units:kilometer" -> "sweet_units:meter" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:perMeterSquared" -> "sweet_units:meter" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:year" -> "sweet_units:second" [ label = "relaSci:hasBaseUnit" ];
	"http://www.semanticweb.org/activage/ontologies/2018/4/activage-core" -> "http://srvgal106.deri.ie:8013/ontology/GOIoTP.owl" [ label = "owl:imports" ];
	"http://www.semanticweb.org/activage/ontologies/2018/4/activage-core" -> "http://srvgal106.deri.ie:8013/ontology/GOIoTPex.owl" [ label = "owl:imports" ];
	"sweet_units:centimeter" -> "sweet_units:centi" [ label = "relaSci:hasPrefix" ];
	"sweet_units:centimeter" -> "sweet_units:meter" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:joulePerTesla" -> "sweet_units:perTesla" [ label = "relaMath:hasOperand" ];
	"sweet_units:joulePerTesla" -> "sweet_units:joule" [ label = "relaMath:hasOperand" ];
	"sosa:observedProperty" -> "sosa:ObservableProperty" [ label = "schema:rangeIncludes" ];
	"sosa:observedProperty" -> "sosa:Observation" [ label = "schema:domainIncludes" ];
	"sosa:observes" -> "ssn:forProperty" [ label = "rdfs:subPropertyOf" ];
	"sosa:observes" -> "sosa:ObservableProperty" [ label = "schema:rangeIncludes" ];
	"sosa:observes" -> "sosa:Sensor" [ label = "schema:domainIncludes" ];
	"sweet_units:degreeC" -> "sweet_units:kelvin" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:siemens" -> "sweet_units:ohm" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:ppb" -> "sweet_units:ratio" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:meterCubedPerKelvin" -> "sweet_units:perKelvin" [ label = "relaMath:hasOperand" ];
	"sweet_units:meterCubedPerKelvin" -> "sweet_units:meterCubed" [ label = "relaMath:hasOperand" ];
	"sweet_units:perKilogram" -> "sweet_units:kilogram" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:lumen" -> "sweet_units:steradian" [ label = "relaMath:hasOperand" ];
	"sweet_units:lumen" -> "sweet_units:candela" [ label = "relaMath:hasOperand" ];
	"sweet_units:ppmv" -> "sweet_units:volumeRatio" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:century" -> "sweet_units:second" [ label = "relaSci:hasBaseUnit" ];
	"sosa:hasFeatureOfInterest" -> "sosa:Observation" [ label = "schema:domainIncludes" ];
	"sosa:hasFeatureOfInterest" -> "sosa:FeatureOfInterest" [ label = "schema:rangeIncludes" ];
	"sosa:hasFeatureOfInterest" -> "sosa:Sampling" [ label = "schema:domainIncludes" ];
	"sosa:hasFeatureOfInterest" -> "sosa:Actuation" [ label = "schema:domainIncludes" ];
	"sosa:hasFeatureOfInterest" -> "sosa:Sample" [ label = "schema:rangeIncludes" ];
	"sosa:isFeatureOfInterestOf" -> "sosa:FeatureOfInterest" [ label = "schema:domainIncludes" ];
	"sosa:isFeatureOfInterestOf" -> "sosa:Actuation" [ label = "schema:rangeIncludes" ];
	"sosa:isFeatureOfInterestOf" -> "sosa:Sampling" [ label = "schema:rangeIncludes" ];
	"sosa:isFeatureOfInterestOf" -> "sosa:Observation" [ label = "schema:rangeIncludes" ];
	"sosa:isFeatureOfInterestOf" -> "sosa:Sample" [ label = "schema:domainIncludes" ];
	"sweet_units:siemensPerKilogram" -> "sweet_units:siemens" [ label = "relaMath:hasOperand" ];
	"sweet_units:siemensPerKilogram" -> "sweet_units:perKilogram" [ label = "relaMath:hasOperand" ];
	"sweet_units:MHz" -> "sweet_units:megahertz" [ label = "owl:sameAs" ];
	"sosa:" -> "http://www.opengeospatial.org/ogc/Software" [ label = "dcterms:license" ];
	"sosa:" -> "daa43d81e86d4ee1996763844254d44e" [ label = "dcterms:creator" ];
	"sosa:" -> "http://www.w3.org/Consortium/Legal/2015/copyright-software-and-document" [ label = "dcterms:license" ];
	"sweet_units:MYA" -> "sweet_units:year" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:degreeF" -> "sweet_units:degreeC" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:perCandela" -> "sweet_units:candela" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:newtonPerMeter" -> "sweet_units:perMeter" [ label = "relaMath:hasOperand" ];
	"sweet_units:newtonPerMeter" -> "sweet_units:newton" [ label = "relaMath:hasOperand" ];
	"sweet_units:perTesla" -> "sweet_units:tesla" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:perPascal" -> "sweet_units:pascal" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:joulePerMeterSquared" -> "sweet_units:perMeterSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:joulePerMeterSquared" -> "sweet_units:joule" [ label = "relaMath:hasOperand" ];
	"sweet_units:perAmpere" -> "sweet_units:ampere" [ label = "relaSci:hasBaseUnit" ];
	"sosa:madeBySampler" -> "sosa:Sampler" [ label = "schema:rangeIncludes" ];
	"sosa:madeBySampler" -> "sosa:Sampling" [ label = "schema:domainIncludes" ];
	"sosa:madeActuation" -> "sosa:Actuation" [ label = "schema:rangeIncludes" ];
	"sosa:madeActuation" -> "sosa:Actuator" [ label = "schema:domainIncludes" ];
	"sweet_units:ppbv" -> "sweet_units:volumeRatio" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:ppm" -> "sweet_units:ratio" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:kilogramRadianPerSecond" -> "sweet_units:radian" [ label = "relaMath:hasOperand" ];
	"sweet_units:kilogramRadianPerSecond" -> "sweet_units:perSecond" [ label = "relaMath:hasOperand" ];
	"sweet_units:kilogramRadianPerSecond" -> "sweet_units:kilogram" [ label = "relaMath:hasOperand" ];
	"sweet_units:joule" -> "sweet_units:perSecondSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:joule" -> "sweet_units:kilogram" [ label = "relaMath:hasOperand" ];
	"sweet_units:joulePerMolePerKelvin" -> "sweet_units:perMole" [ label = "relaMath:hasOperand" ];
	"sweet_units:joulePerMolePerKelvin" -> "sweet_units:perKelvin" [ label = "relaMath:hasOperand" ];
	"sweet_units:joulePerMolePerKelvin" -> "sweet_units:joule" [ label = "relaMath:hasOperand" ];
	"sosa:madeByActuator" -> "sosa:Actuator" [ label = "schema:rangeIncludes" ];
	"sosa:madeByActuator" -> "sosa:Actuation" [ label = "schema:domainIncludes" ];
	"sweet_units:week" -> "sweet_units:second" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:ohmMeter" -> "sweet_units:ohm" [ label = "relaMath:hasOperand" ];
	"sweet_units:ohmMeter" -> "sweet_units:meter" [ label = "relaMath:hasOperand" ];
	"sweet_units:tesla" -> "sweet_units:weber" [ label = "relaMath:hasOperand" ];
	"sweet_units:tesla" -> "sweet_units:perMeterSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:kilohertz" -> "sweet_units:kilo" [ label = "relaSci:hasPrefix" ];
	"sweet_units:kilohertz" -> "sweet_units:hertz" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:newtonMeter" -> "sweet_units:newton" [ label = "relaMath:hasOperand" ];
	"sweet_units:newtonMeter" -> "sweet_units:meter" [ label = "relaMath:hasOperand" ];
	"sweet_units:perMeterCubed" -> "sweet_units:meter" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:percent" -> "sweet_units:ratio" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:degrees" -> "sweet_units:radian" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:pascal" -> "sweet_units:perMeterSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:pascal" -> "sweet_units:newton" [ label = "relaMath:hasOperand" ];
	"sweet_units:amperePerMeter" -> "sweet_units:perMeter" [ label = "relaMath:hasOperand" ];
	"sweet_units:amperePerMeter" -> "sweet_units:ampere" [ label = "relaMath:hasOperand" ];
	"sweet_units:perKilogramMole" -> "sweet_units:perKilogram" [ label = "relaMath:hasOperand" ];
	"sweet_units:perKilogramMole" -> "sweet_units:mole" [ label = "relaMath:hasOperand" ];
	"sosa:isActedOnBy" -> "sosa:Actuation" [ label = "schema:rangeIncludes" ];
	"sosa:isActedOnBy" -> "sosa:ActuatableProperty" [ label = "schema:domainIncludes" ];
	"sweet_units:perRadian" -> "sweet_units:radian" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:perMole" -> "sweet_units:mole" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:arcsecond" -> "sweet_units:radian" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:siemensPerMeter" -> "sweet_units:siemens" [ label = "relaMath:hasOperand" ];
	"sweet_units:siemensPerMeter" -> "sweet_units:perMeter" [ label = "relaMath:hasOperand" ];
	"sosa:isObservedBy" -> "sosa:Sensor" [ label = "schema:rangeIncludes" ];
	"sosa:isObservedBy" -> "sosa:ObservableProperty" [ label = "schema:domainIncludes" ];
	"sweet_units:lux" -> "sweet_units:perMeterSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:lux" -> "sweet_units:lumen" [ label = "relaMath:hasOperand" ];
	"sweet_units:lux" -> "sweet_units:candela" [ label = "relaMath:hasOperand" ];
	"sweet_units:minute" -> "sweet_units:second" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:kilogramMeterPerSecond" -> "sweet_units:perSecond" [ label = "relaMath:hasOperand" ];
	"sweet_units:kilogramMeterPerSecond" -> "sweet_units:meter" [ label = "relaMath:hasOperand" ];
	"sweet_units:kilogramMeterPerSecond" -> "sweet_units:kilogram" [ label = "relaMath:hasOperand" ];
	"sweet_units:gigahertz" -> "sweet_units:giga" [ label = "relaSci:hasPrefix" ];
	"sweet_units:gigahertz" -> "sweet_units:hertz" [ label = "relaSci:hasBaseUnit" ];
	"sosa:hosts" -> "-17219c6f:165248cbd33:-7fd6" [ label = "owl:propertyChainAxiom" ];
	"sosa:hosts" -> "sosa:Platform" [ label = "schema:rangeIncludes" ];
	"sosa:hosts" -> "sosa:Actuator" [ label = "schema:rangeIncludes" ];
	"sosa:hosts" -> "sosa:Sampler" [ label = "schema:rangeIncludes" ];
	"sosa:hosts" -> "sosa:Sensor" [ label = "schema:rangeIncludes" ];
	"sosa:hosts" -> "sosa:Platform" [ label = "schema:domainIncludes" ];
	"iiotex:hasAuthenticationData" -> "owl:topObjectProperty" [ label = "rdfs:subPropertyOf" ];
	"sweet_units:jouleSecond" -> "sweet_units:second" [ label = "relaMath:hasOperand" ];
	"sweet_units:jouleSecond" -> "sweet_units:joule" [ label = "relaMath:hasOperand" ];
	"sweet_units:volt" -> "sweet_units:perSecondCubed" [ label = "relaMath:hasOperand" ];
	"sweet_units:volt" -> "sweet_units:perAmpere" [ label = "relaMath:hasOperand" ];
	"sweet_units:volt" -> "sweet_units:meterSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:volt" -> "sweet_units:kilogram" [ label = "relaMath:hasOperand" ];
	"sweet_units:day" -> "sweet_units:second" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:micrometer" -> "sweet_units:micro" [ label = "relaSci:hasPrefix" ];
	"sweet_units:micrometer" -> "sweet_units:meter" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:micrometer" -> "sweet_units:micron" [ label = "owl:sameAs" ];
	"sweet_units:permil" -> "sweet_units:ratio" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:pascalSecond" -> "sweet_units:second" [ label = "relaMath:hasOperand" ];
	"sweet_units:pascalSecond" -> "sweet_units:pascal" [ label = "relaMath:hasOperand" ];
	"sweet_units:kilogramPerMeterCubed" -> "sweet_units:perMeterCubed" [ label = "relaMath:hasOperand" ];
	"sweet_units:kilogramPerMeterCubed" -> "sweet_units:kilogram" [ label = "relaMath:hasOperand" ];
	"sweet_units:meterSquaredPerSecond" -> "sweet_units:perSecond" [ label = "relaMath:hasOperand" ];
	"sweet_units:meterSquaredPerSecond" -> "sweet_units:meterSquared" [ label = "relaMath:hasOperand" ];
	"sosa:phenomenonTime" -> "time:TemporalEntity" [ label = "schema:rangeIncludes" ];
	"sosa:phenomenonTime" -> "sosa:Sampling" [ label = "schema:domainIncludes" ];
	"sosa:phenomenonTime" -> "sosa:Observation" [ label = "schema:domainIncludes" ];
	"sosa:phenomenonTime" -> "sosa:Actuation" [ label = "schema:domainIncludes" ];
	"sweet_units:meterPerSecondSquared" -> "sweet_units:perSecondSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:meterPerSecondSquared" -> "sweet_units:meter" [ label = "relaMath:hasOperand" ];
	"NULL" -> "iiot:hasURI" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:Sampler" [ label = "owl:allValuesFrom" ];
	"NULL" -> "iiot:PlatformComponent" [ label = "owl:someValuesFrom" ];
	"NULL" -> "092d9bb8d920cd89160cbe10b16b028c" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:observedProperty" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:madeByActuator" [ label = "rdf:first" ];
	"NULL" -> "xsd:anyURI" [ label = "owl:someValuesFrom" ];
	"NULL" -> "sosa:madeSampling" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:madeObservation" [ label = "owl:onProperty" ];
	"NULL" -> "time:TemporalEntity" [ label = "owl:allValuesFrom" ];
	"NULL" -> "sosa:Observation" [ label = "owl:allValuesFrom" ];
	"NULL" -> "iiotex:AuthenticationData" [ label = "owl:someValuesFrom" ];
	"NULL" -> "ssn:forProperty" [ label = "owl:onProperty" ];
	"NULL" -> "sweet_repr:LogarithmicScale" [ label = "owl:allValuesFrom" ];
	"NULL" -> "sosa:isActedOnBy" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:madeBySensor" [ label = "rdf:first" ];
	"NULL" -> "iiot:Location" [ label = "owl:someValuesFrom" ];
	"NULL" -> "sosa:observes" [ label = "owl:onProperty" ];
	"NULL" -> "ssn:isPropertyOf" [ label = "owl:onProperty" ];
	"NULL" -> "iiot:hasUnit" [ label = "owl:onProperty" ];
	"NULL" -> "ssn:hasInput" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:madeBySampler" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:usedProcedure" [ label = "owl:onProperty" ];
	"NULL" -> "iiot:hasServiceInput" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:FeatureOfInterest" [ label = "owl:allValuesFrom" ];
	"NULL" -> "geosparql:asWKT" [ label = "owl:onProperty" ];
	"NULL" -> "ssn:deployedSystem" [ label = "rdf:first" ];
	"NULL" -> "iiotex:hasAuthenticationData" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:hasResult" [ label = "owl:onProperty" ];
	"NULL" -> "a3f4b10686efba4296d857cd81ce9209" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:Sensor" [ label = "owl:allValuesFrom" ];
	"NULL" -> "ssn:deployedSystem" [ label = "owl:onProperty" ];
	"NULL" -> "iiot:hasServiceInterface" [ label = "owl:onProperty" ];
	"NULL" -> "372a99ccfbaa0c161801baf90b8877c9" [ label = "owl:onProperty" ];
	"NULL" -> "dff392f93e4f8a976cd86a615bf530dd" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:Procedure" [ label = "owl:someValuesFrom" ];
	"NULL" -> "13291be0e88967be4761fedd8ad704d6" [ label = "owl:onProperty" ];
	"NULL" -> "ssn:Output" [ label = "owl:allValuesFrom" ];
	"NULL" -> "fdf7479867a3d10ba95aecb190506164" [ label = "owl:onProperty" ];
	"NULL" -> "ssn:isProxyFor" [ label = "owl:onProperty" ];
	"NULL" -> "iiot:hasLocation" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:hasFeatureOfInterest" [ label = "owl:onProperty" ];
	"NULL" -> "ssn:inDeployment" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:Procedure" [ label = "owl:allValuesFrom" ];
	"NULL" -> "-17219c6f:165248cbd33:-7fd3" [ label = "rdf:rest" ];
	"NULL" -> "iiot:hasDescription" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:hasSample" [ label = "owl:onProperty" ];
	"NULL" -> "iiotex:hasLocalID" [ label = "owl:onProperty" ];
	"NULL" -> "iiot:Service" [ label = "owl:someValuesFrom" ];
	"NULL" -> "iiot:ServiceInterface" [ label = "owl:someValuesFrom" ];
	"NULL" -> "sosa:ActuatableProperty" [ label = "owl:allValuesFrom" ];
	"NULL" -> "iiot:hasResultValue" [ label = "owl:onProperty" ];
	"NULL" -> "ssn:hasDeployment" [ label = "owl:onProperty" ];
	"NULL" -> "iiot:hasVersion" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:madeActuation" [ label = "owl:onProperty" ];
	"NULL" -> "rdf:nil" [ label = "rdf:rest" ];
	"NULL" -> "ssn:deployedOnPlatform" [ label = "owl:onProperty" ];
	"NULL" -> "iiot:Location" [ label = "owl:allValuesFrom" ];
	"NULL" -> "88c61727e4360180000b8d34e6bbc8a5" [ label = "owl:onProperty" ];
	"NULL" -> "ssn:implementedBy" [ label = "owl:onProperty" ];
	"NULL" -> "ssn:Stimulus" [ label = "owl:allValuesFrom" ];
	"NULL" -> "sosa:isHostedBy" [ label = "owl:onProperty" ];
	"NULL" -> "ssn:hasOutput" [ label = "owl:onProperty" ];
	"NULL" -> "iiot:hasSemantics" [ label = "owl:onProperty" ];
	"NULL" -> "iiot:hasDataFormat" [ label = "owl:onProperty" ];
	"NULL" -> "iiot:User" [ label = "owl:someValuesFrom" ];
	"NULL" -> "ssn:Property" [ label = "owl:allValuesFrom" ];
	"NULL" -> "sosa:Actuator" [ label = "owl:allValuesFrom" ];
	"NULL" -> "sosa:isResultOf" [ label = "owl:onProperty" ];
	"NULL" -> "iiot:hasComponent" [ label = "owl:onProperty" ];
	"NULL" -> "-17219c6f:165248cbd33:-7fd1" [ label = "rdf:rest" ];
	"NULL" -> "iiot:hasName" [ label = "owl:onProperty" ];
	"NULL" -> "rdfs:Literal" [ label = "owl:someValuesFrom" ];
	"NULL" -> "sosa:madeBySensor" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:phenomenonTime" [ label = "owl:onProperty" ];
	"NULL" -> "ssn:Deployment" [ label = "owl:allValuesFrom" ];
	"NULL" -> "sosa:ObservableProperty" [ label = "owl:allValuesFrom" ];
	"NULL" -> "ssn:inDeployment" [ label = "rdf:first" ];
	"NULL" -> "relaMath:hasScale" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:Sampling" [ label = "owl:allValuesFrom" ];
	"NULL" -> "iiot:hasServiceDefinition" [ label = "owl:onProperty" ];
	"NULL" -> "iiot:ServiceInput" [ label = "owl:someValuesFrom" ];
	"NULL" -> "ssn:detects" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:Platform" [ label = "owl:allValuesFrom" ];
	"NULL" -> "sosa:resultTime" [ label = "owl:onProperty" ];
	"NULL" -> "96862672c2097193e73964d32390abe7" [ label = "owl:onProperty" ];
	"NULL" -> "-17219c6f:165248cbd33:-7fd5" [ label = "rdf:rest" ];
	"NULL" -> "sosa:Result" [ label = "owl:allValuesFrom" ];
	"NULL" -> "iiot:orderedByUser" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:isObservedBy" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:isSampleOf" [ label = "owl:onProperty" ];
	"NULL" -> "iiot:offersService" [ label = "owl:onProperty" ];
	"NULL" -> "6fab4c7206f14970452af1a37b0c894b" [ label = "owl:onProperty" ];
	"NULL" -> "ssn:implements" [ label = "owl:onProperty" ];
	"NULL" -> "iiot:hasBaseEndpoint" [ label = "owl:onProperty" ];
	"NULL" -> "iiot:ServiceOutput" [ label = "owl:someValuesFrom" ];
	"NULL" -> "ssn:Input" [ label = "owl:allValuesFrom" ];
	"NULL" -> "sweet_units:Unit" [ label = "owl:someValuesFrom" ];
	"NULL" -> "iiot:hasServiceOutput" [ label = "owl:onProperty" ];
	"NULL" -> "ssn:System" [ label = "owl:allValuesFrom" ];
	"NULL" -> "sosa:actsOnProperty" [ label = "owl:onProperty" ];
	"NULL" -> "iiot:hasCoverage" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:Sample" [ label = "owl:allValuesFrom" ];
	"NULL" -> "-17219c6f:165248cbd33:-7fcf" [ label = "rdf:rest" ];
	"NULL" -> "ssn:hasSubSystem" [ label = "owl:onProperty" ];
	"NULL" -> "ssn:implements" [ label = "rdf:first" ];
	"NULL" -> "sosa:Actuation" [ label = "owl:allValuesFrom" ];
	"NULL" -> "ssn:hasProperty" [ label = "owl:onProperty" ];
	"NULL" -> "ssn:wasOriginatedBy" [ label = "owl:onProperty" ];
	"NULL" -> "sosa:madeBySampler" [ label = "rdf:first" ];
	"NULL" -> "iiot:DataFormat" [ label = "owl:someValuesFrom" ];
	"NULL" -> "sosa:madeByActuator" [ label = "owl:onProperty" ];
	"NULL" -> "iiot:Semantics" [ label = "owl:someValuesFrom" ];
	"NULL" -> "sosa:hosts" [ label = "owl:onProperty" ];
	"NULL" -> "geosparql:wktLiteral" [ label = "owl:allValuesFrom" ];
	"sosa:madeSampling" -> "sosa:Sampling" [ label = "schema:rangeIncludes" ];
	"sosa:madeSampling" -> "sosa:Sampler" [ label = "schema:domainIncludes" ];
	"sweet_units:secondSquared" -> "sweet_units:second" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:million_km2" -> "sweet_units:meterSquared" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:wattPerMeterPerKelvin" -> "sweet_units:watt" [ label = "relaMath:hasOperand" ];
	"sweet_units:wattPerMeterPerKelvin" -> "sweet_units:perMeter" [ label = "relaMath:hasOperand" ];
	"sweet_units:wattPerMeterPerKelvin" -> "sweet_units:perKelvin" [ label = "relaMath:hasOperand" ];
	"sweet_units:millenium" -> "sweet_units:year" [ label = "relaSci:hasBaseUnit" ];
	"sosa:madeBySensor" -> "sosa:Sensor" [ label = "schema:rangeIncludes" ];
	"sosa:madeBySensor" -> "sosa:Observation" [ label = "schema:domainIncludes" ];
	"sweet_units:wattPerMeterSquaredPerSteradian" -> "sweet_units:wattPerMeterSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:wattPerMeterSquaredPerSteradian" -> "sweet_units:perSteradian" [ label = "relaMath:hasOperand" ];
	"sweet_units:amperePerMeterSquared" -> "sweet_units:perMeterSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:amperePerMeterSquared" -> "sweet_units:ampere" [ label = "relaMath:hasOperand" ];
	"sweet_units:megahertz" -> "sweet_units:mega" [ label = "relaSci:hasPrefix" ];
	"sweet_units:megahertz" -> "sweet_units:hertz" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:meterPerSecond" -> "sweet_units:perSecond" [ label = "relaMath:hasOperand" ];
	"sweet_units:meterPerSecond" -> "sweet_units:meter" [ label = "relaMath:hasOperand" ];
	"sweet_units:kilogramPerMeterSquared" -> "sweet_units:perMeterSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:kilogramPerMeterSquared" -> "sweet_units:kilogram" [ label = "relaMath:hasOperand" ];
	"sweet_units:FTU" -> "sweet_units:FormazinTurbidityUnit" [ label = "owl:sameAs" ];
	"sweet_units:radianPerSecond" -> "sweet_units:radian" [ label = "relaMath:hasOperand" ];
	"sweet_units:radianPerSecond" -> "sweet_units:perSecond" [ label = "relaMath:hasOperand" ];
	"sweet_units:wattPerMeterSquaredPerKelvin" -> "sweet_units:wattPerMeterSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:wattPerMeterSquaredPerKelvin" -> "sweet_units:perKelvin" [ label = "relaMath:hasOperand" ];
	"sosa:isHostedBy" -> "sosa:Platform" [ label = "schema:rangeIncludes" ];
	"sosa:isHostedBy" -> "sosa:Platform" [ label = "schema:domainIncludes" ];
	"sosa:isHostedBy" -> "sosa:Sampler" [ label = "schema:domainIncludes" ];
	"sosa:isHostedBy" -> "sosa:Sensor" [ label = "schema:domainIncludes" ];
	"sosa:isHostedBy" -> "sosa:Actuator" [ label = "schema:domainIncludes" ];
	"sosa:isResultOf" -> "sosa:Sample" [ label = "schema:domainIncludes" ];
	"sosa:isResultOf" -> "sosa:Actuation" [ label = "schema:rangeIncludes" ];
	"sosa:isResultOf" -> "sosa:Observation" [ label = "schema:rangeIncludes" ];
	"sosa:isResultOf" -> "sosa:Sampling" [ label = "schema:rangeIncludes" ];
	"sosa:isResultOf" -> "sosa:Result" [ label = "schema:domainIncludes" ];
	"sweet_units:farad" -> "sweet_units:perVolt" [ label = "relaMath:hasOperand" ];
	"sweet_units:farad" -> "sweet_units:coulomb" [ label = "relaMath:hasOperand" ];
	"sweet_units:decade" -> "sweet_units:second" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:voltPerMeter" -> "sweet_units:volt" [ label = "relaMath:hasOperand" ];
	"sweet_units:voltPerMeter" -> "sweet_units:perMeter" [ label = "relaMath:hasOperand" ];
	"sweet_units:season" -> "sweet_units:second" [ label = "relaSci:hasBaseUnit" ];
	"sosa:hasResult" -> "sosa:Sampling" [ label = "schema:domainIncludes" ];
	"sosa:hasResult" -> "sosa:Actuation" [ label = "schema:domainIncludes" ];
	"sosa:hasResult" -> "sosa:Observation" [ label = "schema:domainIncludes" ];
	"sosa:hasResult" -> "sosa:Result" [ label = "schema:rangeIncludes" ];
	"sosa:hasResult" -> "sosa:Sample" [ label = "schema:rangeIncludes" ];
	"sweet_units:meterSquaredPerKilogram" -> "sweet_units:perKilogram" [ label = "relaMath:hasOperand" ];
	"sweet_units:meterSquaredPerKilogram" -> "sweet_units:meterSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:ampereSquared" -> "sweet_units:ampere" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:coulomb" -> "sweet_units:second" [ label = "relaMath:hasOperand" ];
	"sweet_units:coulomb" -> "sweet_units:ampere" [ label = "relaMath:hasOperand" ];
	"sweet_units:perSecond" -> "sweet_units:second" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:month" -> "sweet_units:second" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:faradPerMeter" -> "sweet_units:perMeter" [ label = "relaMath:hasOperand" ];
	"sweet_units:faradPerMeter" -> "sweet_units:farad" [ label = "relaMath:hasOperand" ];
	"sweet_units:nanometer" -> "sweet_units:nano" [ label = "relaSci:hasPrefix" ];
	"sweet_units:nanometer" -> "sweet_units:meter" [ label = "relaSci:hasBaseUnit" ];
	"sweet_units:joulePerKelvin" -> "sweet_units:perKelvin" [ label = "relaMath:hasOperand" ];
	"sweet_units:joulePerKelvin" -> "sweet_units:joule" [ label = "relaMath:hasOperand" ];
	"sweet_units:perKilogramMeterSquaredPerSecondKelvin" -> "sweet_units:perSecond" [ label = "relaMath:hasOperand" ];
	"sweet_units:perKilogramMeterSquaredPerSecondKelvin" -> "sweet_units:perKilogram" [ label = "relaMath:hasOperand" ];
	"sweet_units:perKilogramMeterSquaredPerSecondKelvin" -> "sweet_units:meterSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:perKilogramMeterSquaredPerSecondKelvin" -> "sweet_units:kelvin" [ label = "relaMath:hasOperand" ];
	"sweet_units:watt" -> "sweet_units:perSecond" [ label = "relaMath:hasOperand" ];
	"sweet_units:watt" -> "sweet_units:joule" [ label = "relaMath:hasOperand" ];
	"sweet_units:pascalPerSecond" -> "sweet_units:perSecond" [ label = "relaMath:hasOperand" ];
	"sweet_units:pascalPerSecond" -> "sweet_units:pascal" [ label = "relaMath:hasOperand" ];
	"sweet_units:coulombMeter" -> "sweet_units:meter" [ label = "relaMath:hasOperand" ];
	"sweet_units:coulombMeter" -> "sweet_units:coulomb" [ label = "relaMath:hasOperand" ];
	"sweet_units:weber" -> "sweet_units:perSecondSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:weber" -> "sweet_units:perAmpere" [ label = "relaMath:hasOperand" ];
	"sweet_units:weber" -> "sweet_units:meterSquared" [ label = "relaMath:hasOperand" ];
	"sweet_units:weber" -> "sweet_units:kilogram" [ label = "relaMath:hasOperand" ];
	"owl:Thing" -> "sweet_units:Unit" [ label = "iiot:hasUnit" ];
	"geosparql:Geometry" -> "geosparql:wktLiteral" [ label = "geosparql:asWKT" ];
	"iiot:Service" -> "iiot:ServiceInterface" [ label = "iiot:hasServiceInterface" ];
	"sosa:Result" -> "owl:Thing" [ label = "iiot:hasResultValue" ];
	"owl:Thing" -> "iiot:User" [ label = "iiot:hasUser" ];
	"owl:Thing" -> "iiot:User" [ label = "iiot:orderedByUser" ];
	"owl:Thing" -> "iiot:Location" [ label = "iiot:hasLocation" ];
	"owl:Thing" -> "xsd:dateTime" [ label = "sosa:resultTime" ];
	"iiot:Service" -> "xsd:anyURI" [ label = "iiot:hasServiceDefinition" ];
	"owl:Thing" -> "iiot:MeasurementKind" [ label = "iiot:hasMeasurementKind" ];
	"iiot:User" -> "owl:Thing" [ label = "iiot:isUserOf" ];
	"owl:Thing" -> "iiot:PlatformComponent" [ label = "iiot:hasComponent" ];
	"iiot:ServiceInterface" -> "iiot:ServiceInput" [ label = "iiot:hasServiceInput" ];
	"owl:Thing" -> "iiot:DataFormat" [ label = "iiot:hasDataFormat" ];
	"owl:Thing" -> "iiot:DomainOfInterest" [ label = "iiot:hasDomainOfInterest" ];
	"owl:Thing" -> "iiot:Location" [ label = "iiot:hasCoverage" ];
	"owl:Thing" -> "iiot:Semantics" [ label = "iiot:hasSemantics" ];
	"owl:Thing" -> "iiotex:AuthenticationData" [ label = "iiotex:hasAuthenticationData" ];
	"owl:Thing" -> "xsd:anyURI" [ label = "iiot:hasURI" ];
	"sosa:Platform" -> "iiot:Service" [ label = "iiot:offersService" ];
	"iiot:ServiceInterface" -> "iiot:ServiceOutput" [ label = "iiot:hasServiceOutput" ];

}
