digraph ar2dtool_diagram { 
rankdir=LR;
size="1501"
node [shape = rectangle, color="orange"]; "ns1:PricingModel" "ns1:AccessInterfaceType" "ns1:OfferingQuery" "ns1:Consumer" "ns1:Endpoint" "ns1:EndpointType" "ns1:License" "ns1:BasicData" "ns1:Provider" "ns1:OfferingCategory" "ns1:LicenseType" "ns1:OfferingSubscription" "ns1:DataTypeAnnotation" "ns1:Offering" ; /*classes style*/
	"ns1:hasOutput" -> "ns1:Offering" [ label = "ns3:domainIncludes" ];
	"ns1:hasOutput" -> "ns1:BasicData" [ label = "ns3:rangeIncludes" ];
	"ns1:licenseType" -> "ns1:License" [ label = "ns3:domainIncludes" ];
	"ns1:licenseType" -> "ns1:LicenseType" [ label = "ns3:rangeIncludes" ];
	"ns1:offering" -> "ns1:Offering" [ label = "ns3:rangeIncludes" ];
	"ns1:offering" -> "ns1:Provider" [ label = "ns3:domainIncludes" ];
	"ns1:offering" -> "ns1:isProvidedBy" [ label = "ns3:inverseOf" ];
	"ns1:consumerId" -> "ns3:Text" [ label = "ns3:rangeIncludes" ];
	"ns1:consumerId" -> "ns1:Consumer" [ label = "ns3:domainIncludes" ];
	"ns1:isActivated" -> "ns3:Boolean" [ label = "ns3:rangeIncludes" ];
	"ns1:isActivated" -> "ns1:Offering" [ label = "ns3:domainIncludes" ];
	"ns1:endpointType" -> "ns1:EndpointType" [ label = "ns3:rangeIncludes" ];
	"ns1:endpointType" -> "ns1:Endpoint" [ label = "ns3:domainIncludes" ];
	"ns1:isProvidedBy" -> "ns1:Provider" [ label = "ns3:rangeIncludes" ];
	"ns1:isProvidedBy" -> "ns1:Offering" [ label = "ns3:domainIncludes" ];
	"ns1:expectedAnnotation" -> "ns1:DataTypeAnnotation" [ label = "ns3:rangeIncludes" ];
	"ns1:expectedAnnotation" -> "ns1:OfferingCategory" [ label = "ns3:domainIncludes" ];
	"ns1:offeringExpirationTime" -> "ns1:Offering" [ label = "ns3:domainIncludes" ];
	"ns1:offeringExpirationTime" -> "ns3:DateTime" [ label = "ns3:rangeIncludes" ];
	"ns1:endpoint" -> "ns1:Endpoint" [ label = "ns3:rangeIncludes" ];
	"ns1:endpoint" -> "ns1:Offering" [ label = "ns3:domainIncludes" ];
	"ns1:accessInterfaceType" -> "ns1:Endpoint" [ label = "ns3:domainIncludes" ];
	"ns1:accessInterfaceType" -> "ns1:AccessInterfaceType" [ label = "ns3:rangeIncludes" ];
	"ns1:hasInput" -> "ns1:Offering" [ label = "ns3:domainIncludes" ];
	"ns1:hasInput" -> "ns1:BasicData" [ label = "ns3:rangeIncludes" ];
	"ns1:subscriptionId" -> "ns3:Text" [ label = "ns3:rangeIncludes" ];
	"ns1:subscriptionId" -> "ns1:OfferingSubscription" [ label = "ns3:domainIncludes" ];
	"ns1:organizationId" -> "ns3:Text" [ label = "ns3:rangeIncludes" ];
	"ns1:organizationId" -> "ns3:Organization" [ label = "ns3:domainIncludes" ];
	"ns1:offeringId" -> "ns3:Text" [ label = "ns3:rangeIncludes" ];
	"ns1:offeringId" -> "ns1:Offering" [ label = "ns3:domainIncludes" ];
	"ns1:subscribesTo" -> "ns1:OfferingSubscription" [ label = "ns3:domainIncludes" ];
	"ns1:subscribesTo" -> "ns1:Offering" [ label = "ns3:rangeIncludes" ];
	"ns1:providerId" -> "ns1:Provider" [ label = "ns3:domainIncludes" ];
	"ns1:providerId" -> "ns3:Text" [ label = "ns3:rangeIncludes" ];
	"ns1:offeringQuery" -> "ns1:Consumer" [ label = "ns3:domainIncludes" ];
	"ns1:offeringQuery" -> "ns1:isRegisteredBy" [ label = "ns3:inverseOf" ];
	"ns1:offeringQuery" -> "ns1:OfferingQuery" [ label = "ns3:rangeIncludes" ];
	"ns1:pricingModel" -> "ns1:PricingModel" [ label = "ns3:rangeIncludes" ];
	"ns1:pricingModel" -> "ns3:PriceSpecification" [ label = "ns3:domainIncludes" ];
	"ns1:refersTo" -> "ns1:OfferingCategory" [ label = "ns3:domainIncludes" ];
	"ns1:refersTo" -> "rdfs:Class" [ label = "ns3:rangeIncludes" ];
	"ns1:isRegisteredBy" -> "ns1:Consumer" [ label = "ns3:rangeIncludes" ];
	"ns1:isRegisteredBy" -> "ns1:OfferingQuery" [ label = "ns3:domainIncludes" ];
	"ns1:valueType" -> "ns3:DataType" [ label = "ns3:rangeIncludes" ];
	"ns1:valueType" -> "ns1:BasicData" [ label = "ns3:domainIncludes" ];
	"ns1:subscribedQuery" -> "ns1:OfferingQuery" [ label = "ns3:rangeIncludes" ];
	"ns1:subscribedQuery" -> "ns1:OfferingSubscription" [ label = "ns3:domainIncludes" ];
	"ns1:queryId" -> "ns3:Text" [ label = "ns3:rangeIncludes" ];
	"ns1:queryId" -> "ns1:Query" [ label = "ns3:domainIncludes" ];
	"ns1:rdfAnnotation" -> "ns1:DataTypeAnnotation" [ label = "ns3:rangeIncludes" ];
	"ns1:rdfAnnotation" -> "ns1:BasicData" [ label = "ns3:domainIncludes" ];

}
